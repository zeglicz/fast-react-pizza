diff --git a/src/features/cart/Cart.jsx b/src/features/cart/Cart.jsx
index 907c5dc..681b997 100644
--- a/src/features/cart/Cart.jsx
+++ b/src/features/cart/Cart.jsx
@@ -25,7 +25,7 @@ function Cart() {
 
       <ul className="mt-3 divide-y divide-stone-200 border-b">
         {cart.map((item) => (
-          <CartItem item={item} key={item.key} />
+          <CartItem item={item} key={item.pizzaId} />
         ))}
       </ul>
 
diff --git a/src/features/cart/CartItem.jsx b/src/features/cart/CartItem.jsx
index 1cc524e..37cea58 100644
--- a/src/features/cart/CartItem.jsx
+++ b/src/features/cart/CartItem.jsx
@@ -1,10 +1,16 @@
 /* eslint-disable react/prop-types */
-import Button from "../../ui/Button";
+import { useSelector } from "react-redux";
+import { getCurrentQuantityById } from "./cartSlice";
+
 import { formatCurrency } from "../../utils/helpers";
+import DeleteItem from "./DeleteItem";
+import UpdateItemQuantity from "./UpdateItemQuantity";
 
 function CartItem({ item }) {
   const { pizzaId, name, quantity, totalPrice } = item;
 
+  const currentQuantity = useSelector(getCurrentQuantityById(pizzaId));
+
   return (
     <li className="py-3 sm:flex sm:items-center sm:justify-between">
       <p className="mb-1 sm:mb-0">
@@ -12,7 +18,11 @@ function CartItem({ item }) {
       </p>
       <div className="flex items-center justify-between sm:gap-6">
         <p className="text-sm font-bold">{formatCurrency(totalPrice)}</p>
-        <Button type="small">Delete</Button>
+        <UpdateItemQuantity
+          pizzaId={pizzaId}
+          currentQuantity={currentQuantity}
+        />
+        <DeleteItem pizzaId={pizzaId} />
       </div>
     </li>
   );
diff --git a/src/features/cart/cartSlice.js b/src/features/cart/cartSlice.js
index 39aeba3..9d235ed 100644
--- a/src/features/cart/cartSlice.js
+++ b/src/features/cart/cartSlice.js
@@ -24,7 +24,7 @@ const cartSlice = createSlice({
     },
     deleteItem(state, action) {
       // payload = pizzaId
-      state.cart = state.cart.filter((item) => item !== action.payload);
+      state.cart = state.cart.filter((item) => item.pizzaId !== action.payload);
     },
     increaseItemQuantity(state, action) {
       // payload = pizzaId
@@ -35,7 +35,7 @@ const cartSlice = createSlice({
     decreaseItemQuantity(state, action) {
       // payload = pizzaId
       const item = state.cart.find((item) => item.pizzaId === action.payload);
-      if (item.quantity === 1) return null;
+      if (item.quantity === 1) return;
       item.quantity--;
       item.totalPrice = item.quantity * item.unitPrice;
     },
@@ -63,3 +63,6 @@ export const getTotalCartQuantity = (state) =>
 
 export const getTotalCartPrice = (state) =>
   state.cart.cart.reduce((sum, item) => sum + item.totalPrice, 0);
+
+export const getCurrentQuantityById = (id) => (state) =>
+  state.cart.cart.find((item) => item.pizzaId === id)?.quantity ?? 0;
diff --git a/src/features/menu/MenuItem.jsx b/src/features/menu/MenuItem.jsx
index 489e2bb..5948989 100644
--- a/src/features/menu/MenuItem.jsx
+++ b/src/features/menu/MenuItem.jsx
@@ -1,14 +1,20 @@
 /* eslint-disable react/prop-types */
-import { useDispatch } from "react-redux";
-import { addItem } from "../cart/cartSlice";
+import { useDispatch, useSelector } from "react-redux";
+import { addItem, getCurrentQuantityById } from "../cart/cartSlice";
 
-import Button from "../../ui/Button";
 import { formatCurrency } from "../../utils/helpers";
+import Button from "../../ui/Button";
+import DeleteItem from "../cart/DeleteItem";
+import UpdateItemQuantity from "../cart/UpdateItemQuantity";
 
 function MenuItem({ pizza }) {
   const dispatch = useDispatch();
+
   const { id, name, unitPrice, ingredients, soldOut, imageUrl } = pizza;
 
+  const currentQuantity = useSelector(getCurrentQuantityById(id));
+  const isInCart = currentQuantity > 0;
+
   function handleAddToCart() {
     const newItem = {
       pizzaId: id,
@@ -39,7 +45,17 @@ function MenuItem({ pizza }) {
             <p className="font-medium uppercase text-stone-500">Sold out</p>
           )}
 
-          {!soldOut && (
+          {isInCart && (
+            <div className="sm: gp-8 flex items-center gap-3">
+              <UpdateItemQuantity
+                pizzaId={id}
+                currentQuantity={currentQuantity}
+              />
+              <DeleteItem pizzaId={id} />
+            </div>
+          )}
+
+          {!soldOut && !isInCart && (
             <Button type="small" onClick={handleAddToCart}>
               Add to cart
             </Button>
diff --git a/src/ui/Button.jsx b/src/ui/Button.jsx
index 3850aca..f4cf38b 100644
--- a/src/ui/Button.jsx
+++ b/src/ui/Button.jsx
@@ -8,6 +8,7 @@ function Button({ children, disabled, to, type, onClick }) {
   const styles = {
     primary: base + " px-4 py-3 md:px-6 md:py-4",
     small: base + " px-4 py-2 md:px-5 md:py-2.5 text-xs",
+    round: base + " px-2.5 py-1 md:px-3.5 md:py-2 text-xs",
     secondary:
       "focus:bg-yello-300 text-sm inline-block rounded-full border-2 border-stone-300 px-4 py-2.5 font-semibold uppercase tracking-wide text-stone-400 transition-colors duration-300 hover:bg-stone-300 focus:text-stone-800 hover:text-stone-800 focus:outline-none focus:ring focus:ring-stone-200 focus:ring-offset-2 disabled:cursor-not-allowed md:px-6 md:py-3.5",
   };
